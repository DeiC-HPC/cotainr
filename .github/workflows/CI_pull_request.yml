name: CI on pull request

# The test suite is triggered when opening, reopening or synchronizing a non-draft pull request
# (The default triggers were identical but for both draft and non-draft pull requests)
# Additionally, we trigger when a pull request is taken out from draft mode (ready_for_review)

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize, ready_for_review]
  schedule:
      - cron: '15 2 * * TUE'  # Also run the full test suite for PRs on the main branch every Tuesday night
  workflow_dispatch:  # allow for manually trigging the workflow

jobs:

  # Prepares the matrix inputs, generates a lowercase version of the repo name, calculates sha256 of the input trigger paths.
  container-inputs:
    uses: ./.github/workflows/Container-inputs.yml

  lint-and-format:
    needs: [container-inputs]
    name: Lint and check formatting
    runs-on: ${{ matrix.os.runs-on }}
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.container-inputs.outputs.matrix_single_default) }}
    container:
      image: ghcr.io/${{ needs.container-inputs.outputs.lowercase_repo_name }}-dev_env-${{ matrix.singularity.provider }}-${{ matrix.singularity.version }}:${{ needs.container-inputs.outputs.input_trigger_files_sha256 }}
      options: --user=1001
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Verify the uv.lock is up-to-date
        run: uv lock --check
      - name: Install linting dependencies
        run: uv sync --python ${{ matrix.python-version }} --managed-python --group=lint --frozen
      - name: Restore pre-commit cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.pre-commit-cache
          key: pre-commit-3-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit on all files
        working-directory: ${{ github.workspace }}
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files
        env:
          PRE_COMMIT_HOME: ${{ github.workspace }}/.pre-commit-cache

  build:
    needs: [container-inputs]
    name: Build package
    runs-on: ${{ matrix.os.runs-on }}
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.container-inputs.outputs.matrix_single_default) }}
    container:
      image: ghcr.io/${{ needs.container-inputs.outputs.lowercase_repo_name }}-dev_env-${{ matrix.singularity.provider }}-${{ matrix.singularity.version }}:${{ needs.container-inputs.outputs.input_trigger_files_sha256 }}
      options: --user=1001
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build the Python Package
        run: uv build
      - name: Upload build artifacts for subsequent workflow steps
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  run-full-test-suite:
    if: github.event.pull_request.draft == false
    needs: [container-inputs]
    name: Run full test suite
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.container-inputs.outputs.matrix_full) }}
    permissions:
      packages: read
    container:
      image: ghcr.io/${{ needs.container-inputs.outputs.lowercase_repo_name }}-dev_env-${{ matrix.singularity.provider }}-${{ matrix.singularity.version }}:${{ needs.container-inputs.outputs.input_trigger_files_sha256 }}
      options: --privileged
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install test dependencies
        run: uv sync --python ${{ matrix.python-version }} --managed-python --group=tests --frozen
      - name: Run test suite via pytest
        run: uv run pytest -vv --junitxml=pytest_junit_out.xml
      - name: Archive the test results and coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-results-and-coverage_python${{ matrix.python-version }}_${{ matrix.singularity.provider }}${{ matrix.singularity.version }}_${{ matrix.os.tag }}
          path: |
            pytest_junit_out.xml
            htmlcov/*
