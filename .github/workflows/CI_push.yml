name: CI on push to branch
on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-format:
    name: Lint and check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1

  read_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v4
      - name: Set matrix data
        id: set-matrix
        run: echo "matrix=$(jq -c . < .github/workflows/matrix_limited.json)" >> $GITHUB_OUTPUT

  get_branch_name:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8
      - name: Display Current Branch Name
        run: | 
             echo "Current Branch: ${{ steps.branch-names.outputs.current_branch }}"

  run-unittests-AMD:
    needs: [ read_matrix, get_branch_name ]
    runs-on: ubuntu-latest
    name: Run unittests
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.read_matrix.outputs.matrix) }}
    container:
      image: ghcr.io/deic-hpc/cotainr/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}:${{ steps.branch-names.outputs.current_branch }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Activate uv, install dependencies and run tests
        run: |
          uv sync
          pytest -vv -m "not endtoend and not singularity_integration and not conda_integration"

  run-unittests-ARM:
    needs: [ read_matrix, get_branch_name ]
    runs-on: ubuntu-latest-arm
    name: Run unittests
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.read_matrix.outputs.matrix) }}
    container:
      image: ghcr.io/deic-hpc/cotainr/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}:${{ steps.branch-names.outputs.current_branch }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Activate uv, install dependencies and run tests
        run: |
          uv sync
          pytest -vv -m "not endtoend and not singularity_integration and not conda_integration"
