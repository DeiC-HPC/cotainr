name: CI on push to branch

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
    paths-ignore: # this workflow still runs If other file changes are added concurrently to these.
      - '.github/workflows/matrix.json'
      - 'dockerfiles/Dockerfile'
      - '.github/workflows/SCHED_build_docker.yml'
  workflow_call:
    inputs:
      branch:
        required: false
        type: string

jobs:
  lint-and-format:
    name: Lint and check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
      - name: Verify the uv.lock is up-to-date
        run: uv lock --check
      - name: Install linting dependencies
        run: uv sync --python 3.12 --managed-python --group=lint --frozen
      - name: Restore pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit on all files
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files

  read_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v4
      - name: Set matrix data
        id: set-matrix
        run: echo "matrix=$(jq -c . < .github/workflows/matrix_limited.json)" >> $GITHUB_OUTPUT

  lowercase:
    runs-on: ubuntu-latest
    outputs:
      lowercase_repo: ${{ steps.lowercase.outputs.lowercase_repo }}
    steps:
      - name: lowercase github.repository
        id: lowercase
        run: echo "lowercase_repo=${GITHUB_REPOSITORY@L}" >>${GITHUB_OUTPUT}

  run-unittests-AMD:
    needs: [read_matrix, lowercase]
    runs-on: ubuntu-latest
    name: Run unittests
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.read_matrix.outputs.matrix) }}
    container:
      image: ghcr.io/${{ needs.lowercase.outputs.lowercase_repo }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}:${{ inputs.branch || 'main' }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
      - name: Install python
        run: uv python install ${{ matrix.python-version }}
      - name: Install test dependencies
        run: uv sync --python ${{ matrix.python-version }} --managed-python --group=tests --frozen
      - name: Run unittests via pytest
        run: uv run pytest -vv -m "not endtoend and not singularity_integration and not conda_integration"

  run-unittests-ARM:
    needs: [read_matrix, lowercase]
    runs-on: ubuntu-24.04-arm
    name: Run unittests
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.read_matrix.outputs.matrix) }}
    container:
      image: ghcr.io/${{ needs.lowercase.outputs.lowercase_repo }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}:${{ inputs.branch || 'main' }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v5
      - name: Install python
        run: uv python install ${{ matrix.python-version }}
      - name: Install test dependencies
        run: uv sync --python ${{ matrix.python-version }} --managed-python --group=tests --frozen
      - name: Run unittests via pytest
        run: uv run pytest -vv -m "not endtoend and not singularity_integration and not conda_integration"