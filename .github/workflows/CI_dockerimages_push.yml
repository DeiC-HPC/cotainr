name: CI on push to branch
on:
#  schedule:
  #    - cron: '17 15 * * *'
  #  workflow_dispatch:
  push:
    branches:
      - docker_dev_env

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-format:
    name: Lint and check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
  run-unittests:
    name: Run unittests
    permissions:
      packages: read
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ "ubuntu-latest" ]
#        python-version: [ "3.9", "3.10" ]#, "3.11", "3.12"]
#        singularity: [
#          { provider: "singularity", version: "3.8.7" },
#          #        {provider: "apptainer", version: "1.1.3"},
#          { provider: "apptainer", version: "1.3.4" },
#          #        {provider: "singularity-ce", version: "3.9.2"},
#          #        {provider: "singularity-ce", version: "4.1.3"},
#          #        {provider: "singularity-ce", version: "4.2.1"}
#        ]
    container:
      image: ghcr.io/deic-hpc/cotainr/singularity/3.8.7/3.9:docker_dev_env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
#    pull_image:
#      name: Pull Docker Image
#        run: docker pull ghcr.io/OWNER/IMAGE_NAME:TAG
    runs-on: ubuntu-latest
    steps:
#      - name: Log into registry ${{ env.REGISTRY }}
#        uses: docker/login-action@v3 # v3.0.0
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Pull Docker Image
#        run: docker pull ghcr.io/deic-hpc/cotainr/singularity/3.8.7/3.9:docker_dev_env
      - name: Checkout code
        uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#          cache: pip
      - name: Activate uv
        run: . /test_environment/bin/activate
      - name: Test
        run: python3 --version
      - name: Install test dependencies
        run: |
          uv pip install -e .[tests]
      - name: Run unittests via pytest
        run: pytest -vv -m "not endtoend and not singularity_integration and not conda_integration"
