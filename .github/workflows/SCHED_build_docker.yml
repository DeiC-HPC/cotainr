name: Build Docker and Deploy Images to GHCR

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
#  schedule:
#      - cron: '17 15 * * *'
#  workflow_dispatch:
  push:
    branches:
      - docker_dev_env

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        singularity: [
          {provider: "singularity", version: "3.8.7"},
  #        {provider: "apptainer", version: "1.1.3"},
          {provider: "apptainer", version: "1.3.4"},
          {provider: "singularity-ce", version: "3.9.2"},
          {provider: "singularity-ce", version: "4.1.3"},
          {provider: "singularity-ce", version: "4.2.1"}
        ]

    steps:
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}/${{ matrix.python-version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6 # v5.0.0
        with:
          file: ./dockerfiles/Dockerfile-amd64
          # context: "{{defaultContext}}:dockerfiles/Dockerfile-amd64"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platform: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
                      SINGULARITY_PROVIDER=${{ matrix.singularity.provider }}
                      SINGULARITY_VERSION=${{ matrix.singularity.version }}
                      PYTHON_VERSION=${{ matrix.python-version }}

  build-arm64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.10"]#, "3.11", "3.12"]
        singularity: [
          {provider: "apptainer", version: "latest"},
        ]

    steps:
      # Set up QEMU for ARM support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
#        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}/${{ matrix.python-version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6 # v5.0.0
        with:
          file: ./dockerfiles/Dockerfile-arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platform: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
                      DOCKER_DEFAULT_PLATFORM=linux/arm64
                      SINGULARITY_PROVIDER=${{ matrix.singularity.provider }}
                      SINGULARITY_VERSION=${{ matrix.singularity.version }}
                      PYTHON_VERSION=${{ matrix.python-version }}
                      --platforms="linux/arm64"
