name: Build Docker and Deploy Images to GHCR

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches:
      - "main"
      - "docker_dev_env*"
    tags-ignore:
      - "**"
    paths:
      - '.github/workflows/matrix.json'
      - 'dockerfiles/Dockerfile'
      - '.github/workflows/CI_build_push.yml'
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  read_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v4
     - name: Set matrix data
       id: set-matrix
       run: echo "matrix=$(jq -c . < .github/workflows/matrix.json)" >> $GITHUB_OUTPUT

  build-docker-images:
    needs: read_matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
        matrix:
          ${{ insert }}: ${{ fromJson(needs.read_matrix.outputs.matrix) }}
          #We do not want to build different containers for different python images. So we need to exclude them from the matrix.
          exclude:
            - python-version: 3.9
            - python-version: 3.10
            - python-version: 3.11
            - python-version: 3.12

    steps:
    #Set up QEMU for ARM support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

        # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3 # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6 # v5.0.0
        with:
          file: ./dockerfiles/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }} # ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.singularity.provider }}/${{ matrix.singularity.version }}:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
                      SINGULARITY_PROVIDER=${{ matrix.singularity.provider }}
                      SINGULARITY_VERSION=${{ matrix.singularity.version }}

  dispatch-test-with-build:
    needs: build-docker-images
    uses: ./.github/workflows/CI_push.yml
    with:
      branch: ${{ github.ref_name }}
