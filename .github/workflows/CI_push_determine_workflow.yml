name: Determine CI workflow on push to branch
on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"

jobs:

  get_branch_name:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch-names.outputs.current_branch }}
      main_name: ${{ steps.branch-names.outputs.default_branch }}
    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8


  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    needs: [get_branch_name]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      # determine if docker build files changes
      - name: Get changed files
        id: changed-files-docker-build
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
                .github/workflows/matrix.json
                 dockerfiles/Dockerfile
                .github/workflows/SCHED_build_docker.yml
      # Run if files changed
      - name: Run if file(s) changed
        uses: peter-evans/repository-dispatch@v3
        if: steps.changed-files-docker-build.outputs.any_changed == 'true'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: rebuild
          client-payload: |
            {
              "repo": {
                "name": "${{ github.repository }}",
                "branch": "${{ needs.get_branch_name.outputs.branch_name }}"
              }
            }

      # Run if files did NOT change
      - name: Run if no file(s) changed
        uses: peter-evans/repository-dispatch@v3
        if: steps.changed-files-docker-build.outputs.any_changed == 'false'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: test_push
#          client-payload: |
#            {
#              "repo": {
#                "name": "${{ github.repository }}",
#                "branch": "${{ needs.get_branch_name.outputs.branch_name }}"
#              }
#            }

